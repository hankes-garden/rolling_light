# -*- coding: utf-8 -*-
"""
In this script, we evalute the performance of rolling light with different setup and scenarios.
Created on Tue Jan 24 17:51:35 2017

@author: jason
"""

import matplotlib.pyplot as plt
import cv2
import skimage.measure as measure
import skimage.color as color
import pandas as pd

# define constant values
REF = "reference"
COMPARE = "compare"
PSNR = 'psnr'
SSIM = 'ssim'
COLOR_DIFF = "color_diff"

def computeColorDiff(arrRefImg, arrCompImg):
"""
    compute color difference
"""
    arrRefImg_lab = color.rgb2lab(arrRefImg)
    arrCompImg_lab = color.rgb2lab(arrCompImg)
    arrColorDiff_pixel = color.deltaE_ciede2000(arrRefImg_lab, arrCompImg_lab)
    return np.average(arrColorDiff_pixel)

                   
def performExperiment(strExperimentName, strRefImagePath,
                      dcCompareImages):
    # load image
    arrRefImg = cv2.imread(strRefImagePath)
    arrRefImg_bw = cv2.cvtColor(arrRefImg, cv2.COLOR_BGR2GRAY)
    
    dcResult = {}
    for strImgName, strCompImg in dcCompareImages.iteritems():
        arrCompImg = cv2.imread(strCompImg)
        arrCompImg_bw = cv2.cvtColor(arrCompImg, cv2.COLOR_BGR2GRAY)
        
        # PSNR
        dPSNR = measure.compare_psnr(arrRefImg, arrCompImg)
        
        # ssim
        dSSIM = measure.compare_ssim(arrRefImg_bw, arrCompImg_bw)
        
        
        # Color difference
        
        # Correlation of color histogram
        
        # FISMc
        
        # add to result
        dcCompResult = {PSNR: dPSNR, 
                       SSIM: dSSIM,
                       }
        dcResult[strImgName] = dcCompResult
    
    dfResult = pd.DataFrame.from_dict(dcResult, orient='index')
    
    return dfResult


# evaluateion start
strExperimentName = "illuminance"
strRefImagePath = "../../data/sample_data_for_IQM/original.JPG"
dcCompareImages = {'narrow_b': "../../data/sample_data_for_IQM/narrow_b.JPG",
                   'wide_b': "../../data/sample_data_for_IQM/wide_b.JPG"}
                   
dfResult = performExperiment(strExperimentName, \
                             strRefImagePath, dcCompareImages)
                             
# plot
print dfResult

# write to file
dfResult.to_csv("../../data/result/%s.csv" % strExperimentName)
    
